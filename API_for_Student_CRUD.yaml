openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: API about Student
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080
    description: localServer
tags:
  - name: student
    description: Everything about students
paths:
  /api/students:
    get:
      summary: Get all students
      description: Retrieve all students from the database
      tags:
        - student
      responses:
        '200':
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
              examples:
                all student:
                  value: |-
                    [
                        {
                            "id": 1,
                            "name": "NHU DINH DUC",
                            "gpa": 3.8
                        },
                        {
                            "id": 2,
                            "name": "NHU DINH TRI",
                            "gpa": 3.5
                        },
                        {
                            "id": 3,
                            "name": "NHU DINH THE",
                            "gpa": 3.6
                        }
                    ]
        '204':
          description: No students found
    post:
      summary: Add a new student
      description: Add a new student to the database
      tags:
        - student
      requestBody:
        description: Student object to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
  /api/students/{id}:
    get:
      summary: Get a student by ID
      description: Retrieve a student's details using their ID
      tags:
        - student
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Student found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
    put:
      summary: Update an existing student
      description: Modify the details of a student by ID
      tags:
        - student
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Updated student object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
    delete:
      summary: Delete a student
      description: Remove a student from the database by ID
      tags:
        - student
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Student deleted
        '404':
          description: Student not found
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: John Doe
        gpa:
          type: number
          format: float
          example: 3.8
